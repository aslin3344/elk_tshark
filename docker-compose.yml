version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
      
     
            
  # logstash:
  #   build:
  #     context: logstash/
  #     args:
  #       ELASTIC_VERSION: ${ELASTIC_VERSION}
  #   volumes:
  #     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
  #     - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro,Z
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #   environment:
  #     LS_JAVA_OPTS: -Xms256m -Xmx256m
  #     LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch


  # javaApp:
  #       image: 'febbweiss/java-log-generator:latest' 
  #       depends_on:
  #           - elasticsearch
  #           - kibana
  #       networks:
  #           - elk 
#https://github.com/LianDuanTrain/Elastic/tree/main/1%20Introduction%20and%20Installation/dockerComposeEKLF
#https://github.com/danielguerra69/tshark-elasticsearch
#https://opster.com/es-errors/unknown-key-for-create-index/

#curl -XGET -u elastic:changeme "http://localhost:9200/test_index2/_search" -H "Content-Type: application/json" -d "{}"
#https://curlconverter.com/#python
#./tshark -r /data/pcap/scada.pcapng -T ek | jq .
#curl -XPUT -u elastic:changeme "host.docker.internal:9200/test_index1/_doc/1" -H "Content-Type: application/json" -d "{\"tags\": [\"opster\",\"elasticsearch\"],\"date\": \"01-01-2020\"}"
#nslookup host.docker.internal
#https://opster.com/es-errors/unknown-key-for-create-index/
#tshark -r /data/pcap/scada.pcapng -T ek | jq '.' | java -jar log-generator-0.0.2.jar

  tshark:
      build:
        context: tshark/
      tty: true
      depends_on:
         - elasticsearch
         - kibana
      volumes:
        - pcap:/data/pcap
        - ./scada.pcapng:/data/pcap/scada.pcapng:ro,Z
        - ./tshark/bin/tshark2es.py:/usr/bin/tshark2es.py
        - ./tshark/bin/log-generator.jar:/var/log/java/log-generator-0.0.2.jar
      networks:
        - elk

networks:
  elk:
    driver: bridge

volumes:
  setup:
  elasticsearch:
  pcap:
    driver: local
